// This is your Prisma schema file,
// learn more about it in the docs: https:pris.ly/d/prisma-schema
//
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https:pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  passwordHash String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  // Relations
  accountId String
  account   Account @relation(fields: [accountId], references: [id])
}

model Account {
  id   String @id @default(uuid())
  name String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  // Relations
  users         User[]
  Establishment Establishment[]
}

model Establishment {
  id   String @id @default(uuid())
  name String

  number        String
  street        String
  neighbourhood String
  city          String
  state         String
  country       String
  zipCode       String

  locationLinks Json?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  accountId String
  account   Account   @relation(fields: [accountId], references: [id])
  Service   Service[]
}

model Service {
  id          String  @id @default(uuid())
  name        String
  price       Decimal @db.Decimal(10, 2)
  description String

  extraDetails Json?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  establishmentId String
  establishment   Establishment @relation(fields: [establishmentId], references: [id])
}
